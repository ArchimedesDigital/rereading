{"version":3,"sources":["App.js","instructor_data_view.js","index.js"],"names":["TimeIt","Object","classCallCheck","this","start","Date","now","end","time","Question","props","react_default","a","createElement","className","question","Navbar_default","fixed","Button_default","variant","onClick","size","block","Story","onScroll","story","Context","context","Response","Form_default","onSubmit","Group","Label","Control","type","onChange","value","answer","ButtonGroup_default","goBack","GoBack","continue","WordAlert","word_alert","Alert_default","Study","_this","possibleConstructorReturn","getPrototypeOf","call","state","contexts","questions","context_number","question_number","answers","finished","textInput","views","show_story","show_context","show_question","show_response","show_go_back","timer","scrollTop","scroll_ups","scrolling_up","fetch","json","setState","console","log","_context","t0","data","student_responses","JSON","stringify","method","body","headers","Content-type","then","res","response","catch","err","e","target","word_limit","trim","split","length","preventDefault","slice","validateSubmission","text","push","view_list","parse","stop","prev_scroll","_this2","storyButtonClick","handleStoryScroll","contextButtonClick","backButtonClick","continueButtonClick","questionButtonClick","handleSubmit","handleFormChange","postData","handleStartClick","React","Component","Student","responses","map","instructor_data_view_Response","key","id","Table_default","striped","bordered","hover","responsive","QuestionView","students","i","student","prompt","hasOwnProperty","questionsToView","instructor_data_view_Question","indices","index","QuestionResponse","InstructorPage","loaded","sortBy","handleChange","bind","assertThisInitialized","_context2","event","tempStudents","toConsumableArray","sort","b","toLowerCase","routing","react_router_dom","react_router","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.064401c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport Button from 'react-bootstrap/Button';\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Form from 'react-bootstrap/Form';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\n\r\nclass TimeIt {\r\n    constructor() {\r\n        this.start = Date.now();\r\n        this.end = null;\r\n        this.time = 0;\r\n    }\r\n\r\n    stop() {\r\n        this.end = Date.now();\r\n        this.time += this.end - this.start;\r\n        return this.time / 1000;\r\n    }\r\n\r\n    resume() {\r\n        this.start = Date.now();\r\n    }\r\n}\r\n\r\nfunction Question(props) {\r\n    return (\r\n        <div className={'question'}>\r\n            <div className={'question-prompt'}>{props.question}</div>\r\n            <Navbar fixed={'bottom'}>\r\n                <Button variant='primary' onClick={props.onClick} size='lg' block>Continue</Button>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Story(props) {\r\n    return (\r\n        <div className='story'>\r\n            <div className={'story-box'} onScroll={props.onScroll}>\r\n                <div className={'story-text'}>{props.story}</div>\r\n            </div>\r\n            <Navbar fixed={'bottom'}>\r\n                <Button variant='primary' onClick={props.onClick} size='lg' block>Continue</Button>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Context(props) {\r\n    return (\r\n        <div className='context'>\r\n            <div className={'context-text'}>{props.context}</div>\r\n            <Navbar fixed='bottom'>\r\n                <Button variant='primary' onClick={props.onClick} size='lg' block>Continue</Button>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Response(props) {\r\n    return (\r\n        <div className='response'>\r\n            <Form onSubmit={props.onSubmit}>\r\n                <Form.Group>\r\n                    <Form.Label>{props.question}</Form.Label>\r\n                    <Form.Control type='text' onChange={props.onChange} value={props.answer} />\r\n                </Form.Group>\r\n                <Navbar fixed='bottom'>\r\n                    <ButtonGroup className='multi-button' size='lg'>\r\n                        <Button variant='secondary' type='submit'>Submit</Button>\r\n                        <Button variant='primary' onClick={props.goBack}>Go Back</Button>\r\n                    </ButtonGroup>\r\n                </Navbar>\r\n            </Form>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction GoBack(props) {\r\n    return (\r\n        <div className='go-back'>\r\n            <div>Would you like to see that again?</div>\r\n            <Navbar fixed='bottom'>\r\n                <ButtonGroup className='multi-button' size='lg'>\r\n                    <Button variant='secondary' onClick={props.continue}>No</Button>\r\n                    <Button variant='primary' onClick={props.goBack}>Yes</Button>\r\n                </ButtonGroup>\r\n            </Navbar>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction WordAlert(props) {\r\n\r\n    if (props.word_alert) {\r\n        return (\r\n            <div className='word-alert'>\r\n                <Alert variant='danger'>\r\n                    Please make sure to enter a response and respect word limits\r\n                </Alert>\r\n            </div>\r\n        );\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\nclass Study extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            story: null,\r\n            contexts: [],\r\n            questions: [],\r\n            context_number: 0,\r\n            question_number: 0,\r\n            answers: [],\r\n            finished: false,\r\n            textInput: '',\r\n            views: '[]', // views is stored as a json string\r\n            show_story: false,\r\n            show_context: false,\r\n            show_question: false,\r\n            show_response: false,\r\n            show_go_back: false,\r\n            word_alert: false,\r\n            timer: null,\r\n            scrollTop: 0,\r\n            scroll_ups: 0,\r\n            scrolling_up: false,\r\n        };\r\n\r\n    }\r\n\r\n    async componentDidMount() {\r\n        // Load from server\r\n\r\n        try {\r\n            const questions = await fetch('/api/');\r\n            const json = await questions.json();\r\n            this.setState(json[0]);\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    postData() {\r\n        const url = '/api/add-response/';\r\n        const data = {\r\n            story: this.state.story,\r\n            student_responses: this.state.answers,\r\n        };\r\n\r\n        console.log(JSON.stringify(data));\r\n\r\n        fetch(url, {\r\n            method: 'POST',\r\n            body: JSON.stringify(data),\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            }\r\n\r\n        }).then(res => res.json()).then(response => console.log(JSON.stringify(response)))\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleFormChange(e) {\r\n        this.setState({textInput: e.target.value});\r\n    }\r\n\r\n    validateSubmission(response, word_limit) {\r\n        if (!response) {\r\n            return false;\r\n        } else {\r\n            const response_list = response.trim().split(' ');\r\n            if (!(response_list.length <= word_limit)) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault();\r\n        let question_number = this.state.question_number;\r\n        let context_number = this.state.context_number;\r\n        const answers = this.state.answers.slice();\r\n        const response = this.state.textInput;\r\n        let views = this.state.views;\r\n        const word_limit = this.state.questions[question_number].word_limit;\r\n        let finished = this.state.finished;\r\n        let show_story = this.state.show_story;\r\n        let show_response = this.state.show_response;\r\n        let scroll_ups = this.state.scroll_ups;\r\n\r\n        const isValid = this.validateSubmission(response, word_limit);\r\n        if (!isValid) {\r\n            this.setState({word_alert: true,});\r\n            return;\r\n        }\r\n\r\n        const answer = {\r\n            'context': this.state.contexts[context_number],\r\n            'question': this.state.questions[question_number].text,\r\n            response,\r\n            views,\r\n            scroll_ups,\r\n        };\r\n        answers.push(answer);\r\n        views = '[]'; // Reset views for the next response\r\n        const timer = new TimeIt(); // Refresh the timer so that you aren't double counting\r\n        scroll_ups = 0;\r\n\r\n        if (question_number < this.state.questions.length - 1) {\r\n            question_number += 1;\r\n\r\n        } else { // we're at the last question\r\n            if (context_number < this.state.contexts.length - 1) {\r\n                context_number += 1;\r\n                question_number = 0;\r\n                show_story = true;\r\n            } else { // we're at the last context\r\n                finished = true;\r\n                show_story = false;\r\n                show_response = false;\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            question_number,\r\n            context_number,\r\n            answers,\r\n            finished,\r\n            textInput: '',\r\n            show_story,\r\n            show_response,\r\n            views,\r\n            word_alert: false,\r\n            timer,\r\n            scroll_ups,\r\n        });\r\n    }\r\n\r\n    handleStartClick() {\r\n        const timer = new TimeIt();\r\n        this.setState({show_story: true, timer,});\r\n    }\r\n\r\n    storyButtonClick() {\r\n        const view_list = JSON.parse(this.state.views);\r\n        const time = this.state.timer.stop();\r\n        view_list.push(time);\r\n        const views = JSON.stringify(view_list);\r\n        this.setState({\r\n            show_story: false,\r\n            show_context:true,\r\n            views,\r\n        });\r\n    }\r\n\r\n    contextButtonClick() {\r\n        this.setState({show_context: false, show_question:true});\r\n    }\r\n\r\n    questionButtonClick() {\r\n        this.setState({show_question: false, show_go_back: true,});\r\n    }\r\n\r\n    backButtonClick() {\r\n        const timer = new TimeIt();\r\n        this.setState({\r\n            show_go_back: false,\r\n            show_story: true,\r\n            show_response: false,\r\n            timer,\r\n        });\r\n    }\r\n\r\n    continueButtonClick() {\r\n        this.setState({show_go_back: false, show_response:true});\r\n    }\r\n\r\n    handleStoryScroll(e) {\r\n        const scrollTop = e.target.scrollTop;\r\n        const prev_scroll = this.state.scrollTop;\r\n        let scroll_ups = this.state.scroll_ups;\r\n        let scrolling_up = this.state.scrolling_up;\r\n\r\n        // If the user is scrolling up, log it\r\n        if (scrollTop < prev_scroll && !scrolling_up) {\r\n            scroll_ups++;\r\n            scrolling_up = true;\r\n        } else if (scrollTop > prev_scroll && scrolling_up) {\r\n            scrolling_up = false;\r\n        }\r\n\r\n        this.setState({scrollTop, scroll_ups, scrolling_up});\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let response;\r\n\r\n        if (this.state.story) {\r\n            if (this.state.show_story) {\r\n                response = (<Story\r\n                        story={this.state.story}\r\n                        onClick={() => this.storyButtonClick()}\r\n                        onScroll={(e) => this.handleStoryScroll(e)}\r\n                    />\r\n                );\r\n            } else if (this.state.show_context) {\r\n                response = (\r\n                    <Context\r\n                        context={this.state.contexts[this.state.context_number]}\r\n                        onClick={() => this.contextButtonClick()}\r\n                    />\r\n                );\r\n            } else if (this.state.show_go_back) {\r\n                response = (\r\n                    <GoBack\r\n                        goBack={() => this.backButtonClick()}\r\n                        continue={() => this.continueButtonClick()}\r\n                    />\r\n                );\r\n            } else if (this.state.show_question) {\r\n                response = (\r\n                    <Question\r\n                        question={this.state.questions[this.state.question_number]['text']}\r\n                        onClick={() => this.questionButtonClick()}\r\n                    />\r\n                );\r\n            } else if (this.state.show_response) {\r\n                response = (\r\n                    <div>\r\n                        <WordAlert word_alert={this.state.word_alert}/>\r\n                        <Response\r\n                            onSubmit={(e) => this.handleSubmit(e)}\r\n                            onChange={(e) => this.handleFormChange(e)}\r\n                            question={this.state.questions[this.state.question_number]['text']}\r\n                            answer={this.state.textInput}\r\n                            goBack={() => this.backButtonClick()}\r\n                        />\r\n                    </div>\r\n                );\r\n            } else if (this.state.finished) {\r\n                this.postData();\r\n                response = (\r\n                    <div className={'finished'}>\r\n                        Thank you for your time!\r\n                    </div>\r\n                );\r\n            } else {\r\n                response = (\r\n                    <div className={'start'}>\r\n                        <div>Are you ready?</div>\r\n                        <Navbar fixed={'bottom'}>\r\n                            <Button variant='primary' onClick={() => this.handleStartClick()} size='lg' block>\r\n                                Start!\r\n                            </Button>\r\n                        </Navbar>\r\n                    </div>\r\n                );\r\n            }\r\n        } else { // Haven't pulled prompts from database yet\r\n            response = null;\r\n        }\r\n\r\n        return response;\r\n    }\r\n}\r\n\r\nexport default Study;\r\n\r\n","import React from 'react';\r\nimport './index.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\n\r\nfunction Student(props) {\r\n    const responses = props.student_responses.map(response => (\r\n        <Response response={response} key={response.id}/>\r\n    ));\r\n\r\n    return (\r\n        <div className='student'>\r\n            <div><center><h1>Student #{props.id}</h1></center></div>\r\n            <div><h5><b>Story: </b> {props.story}</h5></div>\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                    <tr>\r\n                        <td><b>Context</b></td>\r\n                        <td><b>Question</b></td>\r\n                        <td><b>Response</b></td>\r\n                        <td><b>Views</b></td>\r\n                        <td><b>Scrolls</b></td>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{responses}</tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nfunction Response(props) {\r\n    const response = props.response;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{response.context}</td>\r\n            <td>{response.question}</td>\r\n            <td>{response.response}</td>\r\n            <td>{response.views}</td>\r\n            <td>{response.scroll_ups}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nfunction QuestionView(props) {\r\n    const students = props.students;\r\n    let questions = {};\r\n    for (let i = 0; i < students.length; i++) {\r\n        let student = students[i];\r\n        for (let prompt in student.student_responses) {\r\n            let question = student.student_responses[prompt].question;\r\n            let context = student.student_responses[prompt].context;\r\n            if (questions.hasOwnProperty(context)) {\r\n                if (questions[context].hasOwnProperty(question)) {\r\n                    questions[context][question].push([i, prompt]);\r\n                } else {\r\n                    questions[context][question] = [[i, prompt]];\r\n                }\r\n            } else {\r\n                questions[context] = {};\r\n                questions[context][question] = [[i, prompt]];\r\n            }\r\n        }\r\n    }\r\n\r\n    const questionsToView = [];\r\n    for (let context in questions) {\r\n        for (let question in questions[context]) {\r\n            questionsToView.push(\r\n                <Question\r\n                    context={context}\r\n                    question={question}\r\n                    indices={questions[context][question]}\r\n                    students={students}\r\n                    key={context}\r\n                />\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='question-view'>\r\n            {questionsToView}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Question(props) {\r\n    const responses = props.indices.map(index => (\r\n        <QuestionResponse student={props.students[index[0]]} prompt={index[1]} key={index[0]}/>\r\n    ));\r\n\r\n    return (\r\n        <div>\r\n            <div><h2>Context: {props.context}</h2></div>\r\n            <div><h2>Question: {props.question}</h2></div>\r\n            <Table striped bordered hover responsive>\r\n                <thead>\r\n                <tr>\r\n                    <td><b>Student</b></td>\r\n                    <td><b>Response</b></td>\r\n                    <td><b>Views</b></td>\r\n                    <td><b>Scrolls</b></td>\r\n                </tr>\r\n                </thead>\r\n                <tbody>{responses}</tbody>\r\n            </Table>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction QuestionResponse(props) {\r\n    return (\r\n        <tr>\r\n            <td>{props.student.id}</td>\r\n            <td>{props.student.student_responses[props.prompt].response}</td>\r\n            <td>{props.student.student_responses[props.prompt].views}</td>\r\n            <td>{props.student.student_responses[props.prompt].scroll_ups}</td>\r\n        </tr>\r\n    );\r\n}\r\n\r\n\r\nclass InstructorPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            students: [],\r\n            loaded: false,\r\n            sortBy: 'student',\r\n        };\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const res = await fetch('/api/add-response/');\r\n            const students = await res.json();\r\n            const sortBy = this.state.sortBy;\r\n            this.setState({\r\n                students,\r\n                loaded: true,\r\n                sortBy,\r\n            });\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const students = this.state.students;\r\n        const loaded = this.state.loaded;\r\n        this.setState({\r\n            students,\r\n            loaded,\r\n            sortBy: event.target.value\r\n        });\r\n    }\r\n\r\n    handleChange(event) {\r\n        const students = this.state.students;\r\n        const loaded = this.state.loaded;\r\n        this.setState({\r\n            students,\r\n            loaded,\r\n            sortBy: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        if (this.state.loaded) {\r\n            let tempStudents = [...this.state.students];\r\n            let students;\r\n            if (this.state.sortBy === 'story') {\r\n                tempStudents.sort((a, b) => (a.story.toLowerCase() > b.story.toLowerCase() ? 1 : -1));\r\n                students = tempStudents.map(student => (\r\n                    <Student\r\n                        story={student.story}\r\n                        student_responses={student.student_responses}\r\n                        id={student.id}\r\n                        key={student.id}\r\n                    />\r\n                ));\r\n            } else if (this.state.sortBy === 'question') {\r\n                students = <QuestionView students={tempStudents}/>;\r\n            } else {\r\n                students = tempStudents.map(student => (\r\n                    <Student\r\n                        story={student.story}\r\n                        student_responses={student.student_responses}\r\n                        id={student.id}\r\n                        key={student.id}\r\n                    />\r\n                ));\r\n            }\r\n\r\n            return (\r\n                <div>\r\n                    <Navbar fixed={'top'}>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <label>\r\n                                Sort by\r\n                                <select value={this.state.sortBy} onChange={this.handleChange}>\r\n                                    <option value={'student'}>Student</option>\r\n                                    <option value={'story'}>Story</option>\r\n                                    <option value={'question'}>Question</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    </Navbar>\r\n                    <div>\r\n                        {students}\r\n                    </div>\r\n                </div>\r\n            );\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n\r\nexport default InstructorPage;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Study from './App';\r\nimport InstructorPage from './instructor_data_view';\r\n\r\n// note(ra): for sanity testing of django-webpack-loader...\r\n// ReactDOM.render(<span>Hello, world!</span>, document.getElementById('root'));\r\n\r\nconst routing = (\r\n    <Router>\r\n        <div>\r\n            <Route path=\"/student\" component={Study} />\r\n            <Route path=\"/instructor\" component={InstructorPage} />\r\n        </div>\r\n    </Router>\r\n);\r\n\r\nReactDOM.render(routing,document.getElementById('root'));\r\n"],"sourceRoot":""}